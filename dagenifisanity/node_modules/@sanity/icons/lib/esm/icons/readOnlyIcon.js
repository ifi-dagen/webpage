var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
import React from "react";
function ReadOnlyIcon(props, svgRef) {
  return /* @__PURE__ */ React.createElement("svg", __spreadValues({
    "data-sanity-icon": "read-only",
    width: "1em",
    height: "1em",
    viewBox: "0 0 17 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef
  }, props), /* @__PURE__ */ React.createElement("path", {
    d: "M11 3L14 6M6 8L3 11L2 15L6 14L9 11M8 6L13 1L16 4L11 9M15 15L1 1",
    stroke: "currentColor",
    strokeWidth: 1.2
  }));
}
const ForwardRef = React.forwardRef(ReadOnlyIcon);
var readOnlyIcon_default = ForwardRef;
export {
  readOnlyIcon_default as default
};
