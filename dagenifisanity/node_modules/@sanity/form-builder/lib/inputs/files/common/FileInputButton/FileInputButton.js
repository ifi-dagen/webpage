"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileInputButton = void 0;

var _react = _interopRequireDefault(require("react"));

var _autoId = require("@reach/auto-id");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _ui = require("@sanity/ui");

var _helpers = require("../../../../components/withFocusRing/helpers");

var _templateObject, _templateObject2;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Input = _styledComponents.default.input(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n"]))); // Note: this is rendered as a label


var SelectButton = (0, _styledComponents.default)(_ui.Button)(_ref => {
  var theme = _ref.theme;
  var border = {
    width: 1,
    color: 'var(--card-border-color)'
  };
  return (0, _styledComponents.css)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    &:not([data-disabled='true']) {\n      &:focus-within {\n        box-shadow: ", ";\n      }\n      &:focus:not(:focus-visible) {\n        box-shadow: ", ";\n      }\n    }\n\n    // This is a little hack to fix wonky @sanity/ui Button rendering where there's a child element.\n    // Can be removed when https://github.com/sanity-io/design/issues/471 is resolved.\n    & span:nth-child(2) {\n      width: 0;\n      flex: none;\n    }\n  "])), (0, _helpers.focusRingStyle)({
    base: theme.sanity.color.base,
    border,
    focusRing: theme.sanity.focusRing
  }), (0, _helpers.focusRingBorderStyle)(border));
});

var FileInputButton = /*#__PURE__*/_react.default.forwardRef(function FileInputButton(props, forwardedRef) {
  var children = props.children,
      _ = props.id,
      accept = props.accept,
      capture = props.capture,
      multiple = props.multiple,
      onSelect = props.onSelect,
      rest = _objectWithoutProperties(props, ["children", "id", "accept", "capture", "multiple", "onSelect"]);

  var id = (0, _autoId.useId)(props.id);

  var handleChange = _react.default.useCallback(event => {
    if (onSelect && event.target.files) {
      onSelect(Array.from(event.target.files));
    }
  }, [onSelect]);

  return /*#__PURE__*/_react.default.createElement(SelectButton, _extends({}, rest, {
    forwardedAs: "label",
    inputId: id
  }), /*#__PURE__*/_react.default.createElement(Input, {
    type: "file",
    value: "",
    id: id,
    onChange: handleChange,
    ref: forwardedRef,
    accept: accept,
    capture: capture,
    multiple: multiple
  }), children);
});

exports.FileInputButton = FileInputButton;