export interface ResponsiveBorderProps {
    border?: boolean | boolean[];
    borderTop?: boolean | boolean[];
    borderRight?: boolean | boolean[];
    borderBottom?: boolean | boolean[];
    borderLeft?: boolean | boolean[];
}
export declare type BoxSizing = 'content' | 'border';
export declare type BoxDisplay = 'none' | 'block' | 'grid' | 'flex' | 'inline-block';
export declare type BoxHeight = 'stretch' | 'fill';
export declare type BoxOverflow = 'visible' | 'hidden' | 'auto';
export interface ResponsiveBoxProps {
    display?: BoxDisplay | BoxDisplay[];
    height?: BoxHeight | BoxHeight[];
    overflow?: BoxOverflow | BoxOverflow[];
    sizing?: BoxSizing | BoxSizing[];
}
export declare type FlexAlign = 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch';
export declare type FlexDirection = 'row' | 'row-reverse' | 'column' | 'column-reverse';
export declare type FlexJustify = 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';
export declare type FlexWrap = 'wrap' | 'wrap-reverse' | 'nowrap';
export interface ResponsiveFlexProps {
    align?: FlexAlign | FlexAlign[];
    direction?: FlexDirection | FlexDirection[];
    justify?: FlexJustify | FlexJustify[];
    wrap?: FlexWrap | FlexWrap[];
}
export interface ResponsiveFlexItemProps {
    flex?: number | number[];
}
export declare type GridAutoRows = 'auto' | 'min' | 'max' | 'fr';
export declare type GridAutoCols = 'auto' | 'min' | 'max' | 'fr';
export declare type GridAutoFlow = 'row' | 'column' | 'row dense' | 'column dense';
export interface ResponsiveGridProps {
    autoRows?: GridAutoRows | GridAutoRows[];
    autoCols?: GridAutoCols | GridAutoCols[];
    autoFlow?: GridAutoFlow | GridAutoFlow[];
    columns?: number | number[];
    gap?: number | number[];
    gapX?: number | number[];
    gapY?: number | number[];
    rows?: number | number[];
}
declare type GridItemColumn = 'auto' | 'full' | number;
declare type GridItemColumnStart = 'auto' | number;
declare type GridItemColumnEnd = 'auto' | number;
declare type GridItemRow = 'auto' | 'full' | number;
declare type GridItemRowStart = 'auto' | number;
declare type GridItemRowEnd = 'auto' | number;
export interface ResponsiveGridItemProps {
    column?: GridItemColumn | GridItemColumn[];
    columnStart?: GridItemColumnStart | GridItemColumnStart[];
    columnEnd?: GridItemColumnEnd | GridItemColumnEnd[];
    row?: GridItemRow | GridItemRow[];
    rowStart?: GridItemRowStart | GridItemRowStart[];
    rowEnd?: GridItemRowEnd | GridItemRowEnd[];
}
export interface ResponsiveMarginProps {
    margin?: number | number[];
    marginX?: number | number[];
    marginY?: number | number[];
    marginTop?: number | number[];
    marginRight?: number | number[];
    marginBottom?: number | number[];
    marginLeft?: number | number[];
}
export interface ResponsivePaddingProps {
    padding?: number | number[];
    paddingX?: number | number[];
    paddingY?: number | number[];
    paddingTop?: number | number[];
    paddingRight?: number | number[];
    paddingBottom?: number | number[];
    paddingLeft?: number | number[];
}
export interface ResponsiveRadiusProps {
    radius?: number | number[];
}
export interface ResponsiveShadowProps {
    shadow?: number | number[];
}
export interface ResponsiveWidthProps {
    width?: number | number[] | 'auto';
}
export {};
//# sourceMappingURL=types.d.ts.map