{
  "version": 3,
  "sources": ["../../../src/primitives/types.ts"],
  "sourcesContent": ["// Border\nexport interface ResponsiveBorderProps {\n  border?: boolean | boolean[]\n  borderTop?: boolean | boolean[]\n  borderRight?: boolean | boolean[]\n  borderBottom?: boolean | boolean[]\n  borderLeft?: boolean | boolean[]\n}\n\n// Box\nexport type BoxSizing = 'content' | 'border'\nexport type BoxDisplay = 'none' | 'block' | 'grid' | 'flex' | 'inline-block'\nexport type BoxHeight = 'stretch' | 'fill'\nexport type BoxOverflow = 'visible' | 'hidden' | 'auto'\nexport interface ResponsiveBoxProps {\n  display?: BoxDisplay | BoxDisplay[]\n  height?: BoxHeight | BoxHeight[]\n  overflow?: BoxOverflow | BoxOverflow[]\n  sizing?: BoxSizing | BoxSizing[]\n}\n\n// Flex\nexport type FlexAlign = 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch'\nexport type FlexDirection = 'row' | 'row-reverse' | 'column' | 'column-reverse'\nexport type FlexJustify =\n  | 'flex-start'\n  | 'flex-end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\nexport type FlexWrap = 'wrap' | 'wrap-reverse' | 'nowrap'\nexport interface ResponsiveFlexProps {\n  align?: FlexAlign | FlexAlign[]\n  direction?: FlexDirection | FlexDirection[]\n  justify?: FlexJustify | FlexJustify[]\n  wrap?: FlexWrap | FlexWrap[]\n}\n\n// FlexItem\nexport interface ResponsiveFlexItemProps {\n  flex?: number | number[]\n}\n\n// Grid\nexport type GridAutoRows = 'auto' | 'min' | 'max' | 'fr'\nexport type GridAutoCols = 'auto' | 'min' | 'max' | 'fr'\nexport type GridAutoFlow = 'row' | 'column' | 'row dense' | 'column dense'\nexport interface ResponsiveGridProps {\n  autoRows?: GridAutoRows | GridAutoRows[]\n  autoCols?: GridAutoCols | GridAutoCols[]\n  autoFlow?: GridAutoFlow | GridAutoFlow[]\n  columns?: number | number[]\n  gap?: number | number[]\n  gapX?: number | number[]\n  gapY?: number | number[]\n  rows?: number | number[]\n}\n\n// GridItem\ntype GridItemColumn = 'auto' | 'full' | number\ntype GridItemColumnStart = 'auto' | number\ntype GridItemColumnEnd = 'auto' | number\ntype GridItemRow = 'auto' | 'full' | number\ntype GridItemRowStart = 'auto' | number\ntype GridItemRowEnd = 'auto' | number\nexport interface ResponsiveGridItemProps {\n  column?: GridItemColumn | GridItemColumn[]\n  columnStart?: GridItemColumnStart | GridItemColumnStart[]\n  columnEnd?: GridItemColumnEnd | GridItemColumnEnd[]\n  row?: GridItemRow | GridItemRow[]\n  rowStart?: GridItemRowStart | GridItemRowStart[]\n  rowEnd?: GridItemRowEnd | GridItemRowEnd[]\n}\n\n// Margin\nexport interface ResponsiveMarginProps {\n  margin?: number | number[]\n  marginX?: number | number[]\n  marginY?: number | number[]\n  marginTop?: number | number[]\n  marginRight?: number | number[]\n  marginBottom?: number | number[]\n  marginLeft?: number | number[]\n}\n\n// Padding\nexport interface ResponsivePaddingProps {\n  padding?: number | number[]\n  paddingX?: number | number[]\n  paddingY?: number | number[]\n  paddingTop?: number | number[]\n  paddingRight?: number | number[]\n  paddingBottom?: number | number[]\n  paddingLeft?: number | number[]\n}\n\n// Radius\nexport interface ResponsiveRadiusProps {\n  radius?: number | number[]\n}\n\n// Shadow\nexport interface ResponsiveShadowProps {\n  shadow?: number | number[]\n}\n\n// Width\nexport interface ResponsiveWidthProps {\n  width?: number | number[] | 'auto'\n}\n"],
  "mappings": ";;AAAA;",
  "names": []
}
