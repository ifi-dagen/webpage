{
  "version": 3,
  "sources": ["../../../../src/primitives/card/card.tsx"],
  "sourcesContent": ["import React, {forwardRef} from 'react'\nimport {isValidElementType} from 'react-is'\nimport styled from 'styled-components'\nimport {\n  responsiveBorderStyle,\n  ResponsiveBorderStyleProps,\n  responsiveRadiusStyle,\n  ResponsiveRadiusStyleProps,\n  responsiveShadowStyle,\n  ResponsiveShadowStyleProps,\n} from '../../styles/internal'\nimport {ThemeColorProvider, ThemeColorSchemeKey, ThemeColorToneKey, useRootTheme} from '../../theme'\nimport {Box, BoxProps} from '../box'\nimport {ResponsiveBorderProps, ResponsiveRadiusProps, ResponsiveShadowProps} from '../types'\nimport {cardStyle} from './styles'\nimport {CardStyleProps} from './types'\n\nexport type CardTone = ThemeColorToneKey | 'inherit'\n\nexport interface CardProps\n  extends BoxProps,\n    ResponsiveBorderProps,\n    ResponsiveRadiusProps,\n    ResponsiveShadowProps {\n  scheme?: ThemeColorSchemeKey\n  tone?: CardTone\n}\n\nconst Root = styled(Box)<\n  CardStyleProps &\n    ResponsiveRadiusStyleProps &\n    ResponsiveBorderStyleProps &\n    ResponsiveShadowStyleProps\n>(responsiveBorderStyle, responsiveRadiusStyle, responsiveShadowStyle, cardStyle)\n\nexport const Card = forwardRef(\n  (props: CardProps & Omit<React.HTMLProps<HTMLDivElement>, 'height'>, ref) => {\n    const {\n      as: asProp,\n      border,\n      borderTop,\n      borderRight,\n      borderBottom,\n      borderLeft,\n      radius = 0,\n      scheme,\n      shadow,\n      tone: toneProp = 'default',\n      ...restProps\n    } = props\n    const as = isValidElementType(asProp) ? asProp : 'div'\n    const rootTheme = useRootTheme()\n    const tone = toneProp === 'inherit' ? rootTheme.tone : toneProp\n\n    return (\n      <ThemeColorProvider scheme={scheme} tone={tone}>\n        <Root\n          data-as={typeof as === 'string' ? as : undefined}\n          data-scheme={rootTheme.scheme}\n          data-ui=\"Card\"\n          data-tone={tone}\n          {...restProps}\n          $border={border}\n          $borderTop={borderTop}\n          $borderRight={borderRight}\n          $borderBottom={borderBottom}\n          $borderLeft={borderLeft}\n          $radius={radius}\n          $shadow={shadow}\n          $tone={tone}\n          forwardedAs={as}\n          ref={ref}\n        />\n      </ThemeColorProvider>\n    )\n  }\n)\n\nCard.displayName = 'Card'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAChC,sBAAiC;AACjC,+BAAmB;AACnB,sBAOO;AACP,mBAAuF;AACvF,iBAA4B;AAE5B,oBAAwB;AAcxB,MAAM,OAAO,sCAAO,gBAKlB,uCAAuB,uCAAuB,uCAAuB;AAEhE,MAAM,OAAO,6BAClB,CAAC,OAAoE,QAAQ;AAC3E,QAYI,YAXF;AAAA,QAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA,MAAM,WAAW;AAAA,MAEf,IADC,sBACD,IADC;AAAA,IAVH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,QAAM,KAAK,wCAAmB,UAAU,SAAS;AACjD,QAAM,YAAY;AAClB,QAAM,OAAO,aAAa,YAAY,UAAU,OAAO;AAEvD,SACE,mDAAC,iCAAD;AAAA,IAAoB;AAAA,IAAgB;AAAA,KAClC,mDAAC,MAAD;AAAA,IACE,WAAS,OAAO,OAAO,WAAW,KAAK;AAAA,IACvC,eAAa,UAAU;AAAA,IACvB,WAAQ;AAAA,IACR,aAAW;AAAA,KACP,YALN;AAAA,IAME,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,aAAa;AAAA,IACb,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,aAAa;AAAA,IACb;AAAA;AAAA;AAOV,KAAK,cAAc;",
  "names": []
}
