{
  "version": 3,
  "sources": ["../../../../src/utils/boundaryElement/useBoundaryElement.ts"],
  "sourcesContent": ["import {useContext} from 'react'\nimport {isRecord} from '../../lib/isRecord'\nimport {BoundaryElementContext, BoundaryElementContextValue} from './boundaryElementContext'\n\nconst DEFAULT_VALUE: BoundaryElementContextValue = {\n  version: 0.0,\n  element: null,\n}\n\nexport function useBoundaryElement(): BoundaryElementContextValue {\n  const value = useContext(BoundaryElementContext)\n\n  // NOTE: This check is for future-compatiblity\n  // - If the value is not an object, it\u2019s not compatible with the current version\n  // - If the value is an object, but doesn\u2019t have `version: 0.0`, it\u2019s not compatible with the current version\n  if (value && (!isRecord(value) || value.version !== 0.0)) {\n    throw new Error('useBoundaryElement(): the context value is not compatible')\n  }\n\n  return value || DEFAULT_VALUE\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyB;AACzB,sBAAuB;AACvB,oCAAkE;AAElE,MAAM,gBAA6C;AAAA,EACjD,SAAS;AAAA,EACT,SAAS;AAAA;AAGJ,8BAA2D;AAChE,QAAM,QAAQ,6BAAW;AAKzB,MAAI,SAAU,EAAC,8BAAS,UAAU,MAAM,YAAY,IAAM;AACxD,UAAM,IAAI,MAAM;AAAA;AAGlB,SAAO,SAAS;AAAA;",
  "names": []
}
