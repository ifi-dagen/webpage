{
  "version": 3,
  "sources": ["../../../../src/components/menu/menuItem.tsx"],
  "sourcesContent": ["import React, {\n  createElement,\n  forwardRef,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {useForwardedRef} from '../../hooks'\nimport {Box, Card, Flex, Text} from '../../primitives'\nimport {ResponsivePaddingProps, ResponsiveRadiusProps} from '../../primitives/types'\nimport {ThemeColorToneKey} from '../../theme'\nimport {Hotkeys} from '../hotkeys'\nimport {useMenu} from './useMenu'\n\ninterface MenuItemProps extends ResponsivePaddingProps, ResponsiveRadiusProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  fontSize?: number | number[]\n  hotkeys?: string[]\n  icon?: React.ComponentType | React.ReactNode\n  iconRight?: React.ComponentType | React.ReactNode\n  selected?: boolean\n  space?: number | number[]\n  text?: React.ReactNode\n  tone?: ThemeColorToneKey\n}\n\nexport const MenuItem = forwardRef(\n  (\n    props: MenuItemProps & Omit<React.HTMLProps<HTMLDivElement>, 'height' | 'ref' | 'selected'>,\n    forwardedRef: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const {\n      children,\n      disabled,\n      fontSize = 2,\n      hotkeys,\n      icon,\n      iconRight,\n      onClick,\n      padding = 3,\n      paddingX,\n      paddingY,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n      radius = 2,\n      selected,\n      space = 3,\n      text,\n      ...restProps\n    } = props\n    const {mount, onItemClick, onMouseEnter, onMouseLeave} = useMenu()\n    const rootRef = useRef<HTMLDivElement | null>(null)\n\n    useEffect(() => mount(rootRef.current, selected), [mount, selected])\n\n    const ref = useForwardedRef(forwardedRef)\n\n    const handleClick = useCallback(\n      (event: React.MouseEvent<HTMLDivElement>) => {\n        if (disabled) return\n        if (onClick) onClick(event)\n        if (onItemClick) onItemClick()\n      },\n      [disabled, onClick, onItemClick]\n    )\n\n    const paddingProps = {\n      padding,\n      paddingX,\n      paddingY,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      paddingLeft,\n    }\n\n    const setRef = useCallback(\n      (el: HTMLDivElement | null) => {\n        ref.current = el\n        rootRef.current = el\n      },\n      [ref]\n    )\n\n    return (\n      <Card\n        as=\"button\"\n        data-ui=\"MenuItem\"\n        {...restProps}\n        disabled={disabled}\n        onClick={handleClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        radius={radius}\n        ref={setRef}\n        role=\"menuitem\"\n        tabIndex={-1}\n        type=\"button\"\n      >\n        {(icon || text || iconRight) && (\n          <Box as=\"span\" {...paddingProps}>\n            <Flex as=\"span\">\n              {icon && (\n                <Text size={fontSize}>\n                  {isValidElement(icon) && icon}\n                  {isValidElementType(icon) && createElement(icon)}\n                </Text>\n              )}\n\n              {text && (\n                <Box\n                  flex={1}\n                  marginLeft={icon ? space : undefined}\n                  marginRight={iconRight ? space : undefined}\n                >\n                  <Text size={fontSize}>{text}</Text>\n                </Box>\n              )}\n\n              {hotkeys && (\n                <Box marginLeft={space} style={{marginTop: -4, marginBottom: -4}}>\n                  <Hotkeys fontSize={fontSize} keys={hotkeys} />\n                </Box>\n              )}\n\n              {iconRight && (\n                <Text size={fontSize}>\n                  {isValidElement(iconRight) && iconRight}\n                  {isValidElementType(iconRight) && createElement(iconRight)}\n                </Text>\n              )}\n            </Flex>\n          </Box>\n        )}\n\n        {children}\n      </Card>\n    )\n  }\n)\n\nMenuItem.displayName = 'MenuItem'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOO;AACP,sBAAiC;AACjC,mBAA8B;AAC9B,wBAAoC;AAGpC,qBAAsB;AACtB,qBAAsB;AAcf,MAAM,WAAW,6BACtB,CACE,OACA,iBACG;AACH,QAoBI,YAnBF;AAAA;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,MAEE,IADC,sBACD,IADC;AAAA,IAlBH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,QAAM,CAAC,OAAO,aAAa,cAAc,gBAAgB;AACzD,QAAM,UAAU,yBAA8B;AAE9C,8BAAU,MAAM,MAAM,QAAQ,SAAS,WAAW,CAAC,OAAO;AAE1D,QAAM,MAAM,kCAAgB;AAE5B,QAAM,cAAc,8BAClB,CAAC,UAA4C;AAC3C,QAAI;AAAU;AACd,QAAI;AAAS,cAAQ;AACrB,QAAI;AAAa;AAAA,KAEnB,CAAC,UAAU,SAAS;AAGtB,QAAM,eAAe;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAGF,QAAM,SAAS,8BACb,CAAC,OAA8B;AAC7B,QAAI,UAAU;AACd,YAAQ,UAAU;AAAA,KAEpB,CAAC;AAGH,SACE,mDAAC,wBAAD;AAAA,IACE,IAAG;AAAA,IACH,WAAQ;AAAA,KACJ,YAHN;AAAA,IAIE;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,MAAK;AAAA,IACL,UAAU;AAAA,IACV,MAAK;AAAA,MAEH,SAAQ,QAAQ,cAChB,mDAAC,uBAAD;AAAA,IAAK,IAAG;AAAA,KAAW,eACjB,mDAAC,wBAAD;AAAA,IAAM,IAAG;AAAA,KACN,QACC,mDAAC,wBAAD;AAAA,IAAM,MAAM;AAAA,KACT,iCAAe,SAAS,MACxB,wCAAmB,SAAS,gCAAc,QAI9C,QACC,mDAAC,uBAAD;AAAA,IACE,MAAM;AAAA,IACN,YAAY,OAAO,QAAQ;AAAA,IAC3B,aAAa,YAAY,QAAQ;AAAA,KAEjC,mDAAC,wBAAD;AAAA,IAAM,MAAM;AAAA,KAAW,QAI1B,WACC,mDAAC,uBAAD;AAAA,IAAK,YAAY;AAAA,IAAO,OAAO,CAAC,WAAW,IAAI,cAAc;AAAA,KAC3D,mDAAC,wBAAD;AAAA,IAAS;AAAA,IAAoB,MAAM;AAAA,OAItC,aACC,mDAAC,wBAAD;AAAA,IAAM,MAAM;AAAA,KACT,iCAAe,cAAc,WAC7B,wCAAmB,cAAc,gCAAc,eAOzD;AAAA;AAMT,SAAS,cAAc;",
  "names": []
}
